import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.constants import ParseMode
from content_fetcher import get_random_content
from config import uakino_url, app_version

logger = logging.getLogger(__name__)


async def start_command(update: Update, context) -> None:
    logger.info(update)
    await update.message.reply_text(
        f"–ü—Ä–∏–≤—ñ—Ç üè¥‚Äç‚ò†Ô∏è\n\n–Ø –ø–æ–∫–∞–∂—É —Ç–æ–±—ñ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ—ñ–ª—å–º/—Å–µ—Ä—ñ–∞–ª/–º—É–ª—å—Ç—Ñ—ñ–ª—å–º –∑ —Å–∞–π—Ç—É <a href='https://{
            uakino_url}'>uakino</a>\n\n"
        "<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:</b>\n/movie <i>—Ñ—ñ–ª—å–º</i>\n/serial <i>—Å–µ—Ä—ñ–∞–ª</i>\n/cartoon <i>–º—É–ª—å—Ç—Ñ—ñ–ª—å–º</i>\n\n"
        f"<b>–í–µ—Ä—Å—ñ—è –±–æ—Ç–∞:</b> {app_version}\n\n"
        f"<blockquote>–ë–æ—Ç –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –∑–∞–¥–ª—è —Ä–æ–∑–≤–∞–≥–∏ —ñ –Ω–µ–º–∞—î –Ω—ñ—è–∫–æ–≥–æ –∑–≤'—è–∑–∫—É –∑ —Å–∞–π—Ç–æ–º https://{
            uakino_url} —è–∫ —ñ <a href='https://t.me/sigmanor'>–∞–≤—Ç–æ—Ä</a> –±–æ—Ç–∞</blockquote>",
        disable_web_page_preview=True,
        parse_mode=ParseMode.HTML,
    )


async def build_tg_message(update: Update, context, content_type: str, button_text: str) -> None:
    waitMessage = await update.message.reply_text(f"–®—É–∫–∞—é {button_text} üßê")
    random_content = get_random_content(content_type)

    caption_text = (
        f"<b>{random_content[0]} ({random_content[1]})</b>\n\n"
        f"<b>IMDb:</b> {random_content[5]}\n<b>–ñ–∞–Ω—Ä:</b> {
            random_content[2]}\n<b>–ê–∫—Ç–æ—Ä–∏:</b> {random_content[7]}\n\n"
        f"{random_content[4] if len(random_content[4].strip()) > 5 else ''}"
    )

    await update.message.reply_photo(
        photo=random_content[6],
        caption=caption_text,
        parse_mode=ParseMode.HTML,
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton(text=f"–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ {button_text}", url=random_content[3])]]
        ),
    )

    await context.bot.delete_message(
        chat_id=update.message.chat.id, message_id=waitMessage.message_id
    )


async def movie_command(update: Update, context) -> None:
    logger.info(update)
    await build_tg_message(update, context, "filmy", "—Ñ—ñ–ª—å–º")


async def cartoon_command(update: Update, context) -> None:
    logger.info(update)
    await build_tg_message(update, context, "cartoon", "–º—É–ª—å—Ç—Ñ—ñ–ª—å–º")


async def serial_command(update: Update, context) -> None:
    logger.info(update)
    await build_tg_message(update, context, "seriesss", "—Å–µ—Ä—ñ–∞–ª")
